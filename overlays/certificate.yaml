#@ load("@ytt:data", "data")

#@ if data.values.gardener.certificate:
#@ load("@ytt:overlay", "overlay")
#@ load("@ytt:struct", "struct")
#@ certificate = struct.decode(data.values.gardener.certificate)
---
apiVersion: kapp.k14s.io/v1alpha1
kind: Config
rebaseRules:
- path: [data]
  type: copy
  sources: [existing, new]
  resourceMatchers:
  - kindNamespaceNameMatcher:
      kind: Secret
      namespace: istio-system
      name: #@ data.values.gardener.istio_ingressgateway_credential_name
- path: [metadata, labels, cert.gardener.cloud/certificate-hash]
  type: copy
  sources: [existing, new]
  resourceMatchers:
  - kindNamespaceNameMatcher:
      kind: Secret
      namespace: istio-system
      name: #@ data.values.gardener.istio_ingressgateway_credential_name
---
apiVersion: v1
data:
  ca.crt: #@ certificate["ca.crt"]
  tls.crt: #@ certificate["tls.crt"]
  tls.key: #@ certificate["tls.key"]
kind: Secret
metadata:
  labels:
    cert.gardener.cloud/certificate: "true"
    cert.gardener.cloud/certificate-hash: #@ certificate["certificate-hash"]
  name: #@ data.values.gardener.istio_ingressgateway_credential_name
  namespace: istio-system
type: Opaque
#@ end